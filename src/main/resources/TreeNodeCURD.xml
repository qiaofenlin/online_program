<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tree">
    <!--create project-->
    <insert id="insertProj" parameterType="com.example.online_program.entity.ProjInfo" keyProperty="id">
        insert into project(proj_id,proj_name,user_id)
        values (#{projectId},#{projectName},#{userId})
    </insert>
    <!--create node-->
    <insert id="insertNode" parameterType="com.example.online_program.entity.TreeNodeInfo" keyProperty="id">
        insert into treenode(parent_id,child_id,node_name,label)
        values (#{parentId},#{childId},#{nodeName},#{label})
    </insert>
    <!--adjust node is file or not-->
    <select id="selectLabel" parameterType="java.lang.String" resultType="java.lang.String">
        select label from treenode
        where child_id=#{parentId}
    </select>
    <!--rename project-->
    <update id="renameProj" parameterType="java.lang.String">
        update project
        set proj_name=#{nodeName},
        update_time=#{updateTime}
        where proj_id=#{nodeId}
    </update>
    <!--rename node-->
    <update id="renameNode" parameterType="java.util.Map">
        update treenode
        set node_name=#{nodeName,jdbcType=VARCHAR},
        update_time = #{updateTime}
        where child_id=#{nodeId,jdbcType=VARCHAR}
    </update>
    <!--move node-->
    <delete id="deleteRelative" parameterType="com.example.online_program.entity.TreeNodeInfo">
        delete from treenode
        where child_id=#{childId}
    </delete>
    <!--query project list by userId-->
    <resultMap id="getProjectList" type="com.example.online_program.entity.ProjInfo">
        <result property="projectId" column="proj_id"/>
        <result property="projectName" column="proj_name"/>
        <result property="label" column="label"/>
    </resultMap>
    <select id="queryProjList" parameterType="java.lang.String" resultMap="getProjectList">
        select proj_id,proj_name
        from project
        where user_id=#{userId}
    </select>
    <!--query project nodes by parentId-->
    <resultMap id="getNodeData" type="com.example.online_program.entity.TreeNodeInfo">
        <result property="childId" column="child_id"/>
        <result property="nodeName" column="node_name"/>
        <result property="label" column="label"/>
    </resultMap>
    <select id="queryNode" parameterType="java.lang.String" resultMap="getNodeData">
        select child_id,node_name,label
        from treenode
        where parent_id=#{nodeId}
    </select>
</mapper>